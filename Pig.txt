student = LOAD 'hdfs://localhost:9000/pig_data/student.txt' USING
   PigStorage(',') as (id:int,name:chararray,city:chararray);
  
Dump student;

grunt> customers = LOAD 'hdfs://localhost:9000/pig_data/customers.txt' USING PigStorage(',');
 
grunt> orders = LOAD 'hdfs://localhost:9000/pig_data/orders.txt' USING PigStorage(',');
 
grunt> student = LOAD 'hdfs://localhost:9000/pig_data/student.txt' USING PigStorage(',');

group:
grunt> group_data = GROUP student_details by age;
grunt> Dump group_data;
$ Illustrate group_data;

grunt> group_multiple = GROUP student_details by (age, city);

grunt> customers3 = JOIN customers1 BY id, customers2 BY id;

grunt> student = UNION student1, student2;

SPLIT student_details into student_details1 if age<23, student_details2 if (22<age and age>25);

filter_data = FILTER student_details BY city == 'Chennai';

grunt> distinct_data = DISTINCT student_details;

grunt> foreach_data = FOREACH student_details GENERATE id,age,city;

grunt> order_by_data = ORDER student_details BY age DESC;

grunt> limit_data = LIMIT student_details 4; 

grunt> student_group_all = Group student_details All;
grunt> student_gpa_avg = foreach student_group_all  Generate
   (student_details.firstname, student_details.gpa), AVG(student_details.gpa);

grunt> student_count = foreach student_group_all  Generate COUNT(student_details.gpa);

grunt> student_gpa_max = foreach student_group_all  Generate
   (student_details.firstname, student_details.gpa), MAX(student_details.gpa);

grunt> student_gpa_min = foreach student_group_all  Generate
   (student_details.firstname, student_details.gpa), MIN(student_details.gpa);

grunt> student_workpages_sum = foreach employee_group Generate 
   (employee_data.name,employee_data.daily_typing_pages),SUM(employee_data.daily_typing_pages);